//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TotalMathDemo.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MathData", Namespace="http://schemas.datacontract.org/2004/07/TotalMathLib")]
    [System.SerializableAttribute()]
    public partial class MathData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int resAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int resDivField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int resMultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int resSubField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int resAdd {
            get {
                return this.resAddField;
            }
            set {
                if ((this.resAddField.Equals(value) != true)) {
                    this.resAddField = value;
                    this.RaisePropertyChanged("resAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int resDiv {
            get {
                return this.resDivField;
            }
            set {
                if ((this.resDivField.Equals(value) != true)) {
                    this.resDivField = value;
                    this.RaisePropertyChanged("resDiv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int resMult {
            get {
                return this.resMultField;
            }
            set {
                if ((this.resMultField.Equals(value) != true)) {
                    this.resMultField = value;
                    this.RaisePropertyChanged("resMult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int resSub {
            get {
                return this.resSubField;
            }
            set {
                if ((this.resSubField.Equals(value) != true)) {
                    this.resSubField = value;
                    this.RaisePropertyChanged("resSub");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ITotalMath")]
    public interface ITotalMath {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITotalMath/Calculate", ReplyAction="http://tempuri.org/ITotalMath/CalculateResponse")]
        TotalMathDemo.ServiceReference1.MathData Calculate(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITotalMath/Calculate", ReplyAction="http://tempuri.org/ITotalMath/CalculateResponse")]
        System.Threading.Tasks.Task<TotalMathDemo.ServiceReference1.MathData> CalculateAsync(int x, int y);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITotalMathChannel : TotalMathDemo.ServiceReference1.ITotalMath, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TotalMathClient : System.ServiceModel.ClientBase<TotalMathDemo.ServiceReference1.ITotalMath>, TotalMathDemo.ServiceReference1.ITotalMath {
        
        public TotalMathClient() {
        }
        
        public TotalMathClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TotalMathClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TotalMathClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TotalMathClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TotalMathDemo.ServiceReference1.MathData Calculate(int x, int y) {
            return base.Channel.Calculate(x, y);
        }
        
        public System.Threading.Tasks.Task<TotalMathDemo.ServiceReference1.MathData> CalculateAsync(int x, int y) {
            return base.Channel.CalculateAsync(x, y);
        }
    }
}
